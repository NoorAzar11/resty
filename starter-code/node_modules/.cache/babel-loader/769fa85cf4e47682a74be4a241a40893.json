{"ast":null,"code":"var _jsxFileName = \"/home/noor/ASAC/resty/starter-code/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './app.scss'; // Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [state, setState] = useState({\n    data: '',\n    requestParams: {}\n  });\n\n  function callApi(requestParams) {\n    // mock output\n    const data = {\n      count: 2,\n      results: [{\n        name: 'fake thing 1',\n        url: 'http://fakethings.com/1'\n      }, {\n        name: 'fake thing 2',\n        url: 'http://fakethings.com/2'\n      }]\n    };\n    this.setState({\n      data,\n      requestParams\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Request Method: \", this.state.requestParams.method]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"URL: \", this.state.requestParams.url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleApiCall: callApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      data: state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n} // class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: null,\n//       requestParams: {},\n//     };\n//   }\n//   callApi = (requestParams) => {\n//     // mock output\n//     const data = {\n//       count: 2,\n//       results: [\n//         {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n//         {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n//       ],\n//     };\n//     this.setState({data, requestParams});\n//   }\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Header />\n//         <div>Request Method: {this.state.requestParams.method}</div>\n//         <div>URL: {this.state.requestParams.url}</div>\n//         <Form handleApiCall={this.callApi} />\n//         <Results data={this.state.data} />\n//         <Footer />\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n\n_s(App, \"aJv/0p/jlBf/iGfvH8mlQra2zX8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/noor/ASAC/resty/starter-code/src/app.js"],"names":["React","useState","Header","Footer","Form","Results","App","props","state","setState","data","requestParams","callApi","count","results","name","url","method"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAO,YAAP,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAmB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAC,EAAN;AAASC,IAAAA,aAAa,EAAC;AAAvB,GAAD,CAA/B;;AAEA,WAASC,OAAT,CAAiBD,aAAjB,EAA+B;AAE3B;AACA,UAAMD,IAAI,GAAG;AACXG,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,OAAO,EAAE,CACP;AAACC,QAAAA,IAAI,EAAE,cAAP;AAAuBC,QAAAA,GAAG,EAAE;AAA5B,OADO,EAEP;AAACD,QAAAA,IAAI,EAAE,cAAP;AAAuBC,QAAAA,GAAG,EAAE;AAA5B,OAFO;AAFE,KAAb;AAOA,SAAKP,QAAL,CAAc;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAd;AACD;;AACD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,qCAAsB,KAAKH,KAAL,CAAWG,aAAX,CAAyBM,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,0BAAW,KAAKT,KAAL,CAAWG,aAAX,CAAyBK,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,IAAD;AAAM,MAAA,aAAa,EAAEJ;AAArB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEJ,KAAK,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,C,CAMH;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAjESJ,G;;KAAAA,G;AAmET,eAAeA,GAAf","sourcesContent":["import React,{useState} from 'react';\n\nimport './app.scss';\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\n\n\nfunction App(props){\n  const [state,setState]=useState({data:'',requestParams:{}});\n\n  function callApi(requestParams){\n   \n      // mock output\n      const data = {\n        count: 2,\n        results: [\n          {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n          {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n        ],\n      };\n      this.setState({data, requestParams});\n    }\n    return (\n      <React.Fragment>\n        <Header />\n        <div>Request Method: {this.state.requestParams.method}</div>\n        <div>URL: {this.state.requestParams.url}</div>\n        <Form handleApiCall={callApi} />\n        <Results data={state.data} />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n\n  \n\n\n\n// class App extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: null,\n//       requestParams: {},\n//     };\n//   }\n\n//   callApi = (requestParams) => {\n//     // mock output\n//     const data = {\n//       count: 2,\n//       results: [\n//         {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n//         {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n//       ],\n//     };\n//     this.setState({data, requestParams});\n//   }\n\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Header />\n//         <div>Request Method: {this.state.requestParams.method}</div>\n//         <div>URL: {this.state.requestParams.url}</div>\n//         <Form handleApiCall={this.callApi} />\n//         <Results data={this.state.data} />\n//         <Footer />\n//       </React.Fragment>\n//     );\n//   }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}