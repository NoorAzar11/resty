{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './app.scss'; // Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\n\nfunction App(props) {\n  _s();\n\n  const [state, setState] = useState(data);\n} // class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: null,\n//       requestParams: {},\n//     };\n//   }\n//   callApi = (requestParams) => {\n//     // mock output\n//     const data = {\n//       count: 2,\n//       results: [\n//         {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n//         {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n//       ],\n//     };\n//     this.setState({data, requestParams});\n//   }\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Header />\n//         <div>Request Method: {this.state.requestParams.method}</div>\n//         <div>URL: {this.state.requestParams.url}</div>\n//         <Form handleApiCall={this.callApi} />\n//         <Results data={this.state.data} />\n//         <Footer />\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n\n_s(App, \"sHCvPrf24K5G8hY8DWl7I4pPszU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/noor/ASAC/resty/starter-code/src/app.js"],"names":["React","useState","Header","Footer","Form","Results","App","props","state","setState","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAO,YAAP,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAmB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAACS,IAAD,CAA/B;AACD,C,CAGD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAvCSJ,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React,{useState} from 'react';\n\nimport './app.scss';\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\n\n\nfunction App(props){\n  const [state,setState]=useState(data)\n}\n\n\n// class App extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: null,\n//       requestParams: {},\n//     };\n//   }\n\n//   callApi = (requestParams) => {\n//     // mock output\n//     const data = {\n//       count: 2,\n//       results: [\n//         {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n//         {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n//       ],\n//     };\n//     this.setState({data, requestParams});\n//   }\n\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Header />\n//         <div>Request Method: {this.state.requestParams.method}</div>\n//         <div>URL: {this.state.requestParams.url}</div>\n//         <Form handleApiCall={this.callApi} />\n//         <Results data={this.state.data} />\n//         <Footer />\n//       </React.Fragment>\n//     );\n//   }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}