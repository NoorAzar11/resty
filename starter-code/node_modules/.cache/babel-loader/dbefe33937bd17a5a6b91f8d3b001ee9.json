{"ast":null,"code":"var _jsxFileName = \"/home/noor/ASAC/resty/starter-code/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './app.scss'; // Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [state, setState] = useState({\n    data: '',\n    requestParams: {}\n  });\n  const [Effects, setEffects] = useState([]);\n\n  async function callApi(requestParams) {\n    setState({\n      requestParams\n    });\n    setEffects([...Effects, requestParams.url, requestParams.method]);\n\n    try {\n      const fetchUrl = await axios.get(requestParams.url); // mock output\n\n      const data = {\n        // count: 2,\n        headers: [fetchUrl.headers],\n        results: [fetchUrl.data.results] //   {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n        //   {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n        // ],\n\n      };\n      setState({\n        data,\n        requestParams\n      });\n    } catch (err) {\n      console.log('try again');\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"%c I RUN ON EVERY RE-RENDER\", 'background:#ccc; color:red');\n  }); // This will run only when the name changes\n\n  useEffect(() => {\n    console.log(`%c I RUN ON HISTORY CHANGE: ${Effects}`, 'background:#000; color:purple');\n  }, [Effects]); // when name or people are changed \n\n  useEffect(() => {\n    console.log(\"I RUN ON STATE, HISTORY CHANGE: \", state);\n  }, [state, Effects]); // run once on initial rendering \n  // can be a good case to do a GET request form an API\n\n  useEffect(() => {\n    console.log(\"Initial loading \", state);\n  }, []); //UNMOUNT\n\n  useEffect(() => {\n    return () => {\n      console.log(\"%c Component unmounted !!\", \"background:yellow; color:black\");\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), Effects.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Form, {\n      handleApiCall: callApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      data: state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"sZlpAV3eMip+mCZ62153zVJ+XnE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/noor/ASAC/resty/starter-code/src/app.js"],"names":["React","useState","useEffect","Header","Footer","Form","Results","axios","App","props","state","setState","data","requestParams","Effects","setEffects","callApi","url","method","fetchUrl","get","headers","results","err","console","log","map","item","idx"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\n\nimport './app.scss';\n\n\n\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport axios from 'axios';\n\n\nfunction App(props){\n  const [state,setState]=useState({data:'',requestParams:{}});\n  const [Effects,setEffects]=useState([]);\n\n  \n  async function callApi(requestParams){\n\n    setState({requestParams})\n    setEffects([...Effects,requestParams.url,requestParams.method])\n\n    try{\n      const fetchUrl=await axios.get(requestParams.url);\n     \n        // mock output\n        const data = {\n          // count: 2,\n          headers:[fetchUrl.headers],\n          results: [fetchUrl.data.results],\n          //   {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n          //   {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n          // ],\n        };\n        setState({data, requestParams});\n\n    }\n    catch(err){\n      console.log('try again');\n    }\n    }\n\n\n    useEffect(()=> {\n      console.log(\"%c I RUN ON EVERY RE-RENDER\", 'background:#ccc; color:red');\n  });\n\n\n  // This will run only when the name changes\n  useEffect(()=> {\n      console.log(`%c I RUN ON HISTORY CHANGE: ${Effects}` , 'background:#000; color:purple');\n  }, [Effects]);\n\n\n  \n  // when name or people are changed \n  useEffect(()=> {\n      console.log(\"I RUN ON STATE, HISTORY CHANGE: \", state);\n  }, [state, Effects]);\n\n\n  \n  // run once on initial rendering \n  // can be a good case to do a GET request form an API\n  useEffect(()=> {\n      console.log(\"Initial loading \", state);\n  }, []);\n\n\n  \n  //UNMOUNT\n  useEffect(()=> {\n      return (()=> {\n          console.log(\"%c Component unmounted !!\", \"background:yellow; color:black\")\n      })\n  });\n\n\n\n    return (\n\n\n\n\n      <React.Fragment>\n        <Header />\n        {\n\n\n\n\n                Effects.map((item, idx)=> {\n                   return <div key={idx}>{item}</div>\n                })\n                \n            }\n        {/* <div>Request Method: {state.requestParams.method}</div>\n        <div>URL: {state.requestParams.url}</div> */}\n        <Form handleApiCall={callApi} />\n        <Results data={state.data} />\n\n        \n        <Footer />\n      </React.Fragment>\n    );\n  }\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}